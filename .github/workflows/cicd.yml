Name: CI/CD

on:
 push:
   branches: [ main ]

jobs:
 build:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       node-version: [19.x]

   steps:
   - name: Checkout repository
     uses: actions/checkout@v3

   - name: Set up Node.js ${{ matrix.node-version }}
     uses: actions/setup-node@v3
     env:
       PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
     with:
       node-version: ${{ matrix.node-version }}

   - name: Install dependencies
     run: npm install

   - name: Login to Docker Hub
     uses: docker/login-action@v2
     with:
       username: ${{ secrets.DOCKER_HUB_USERNAME }}
       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

   - name: Set up Docker Buildx
     id: buildx
     uses: docker/setup-buildx-action@v2

   - name: Build and push
     id: docker_build
     uses: docker/build-push-action@v4
     with:
       context: ./
       file: ./Dockerfile
       push: true
       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mvc-structure:latest

   - name: Image digest
     run: echo ${{ steps.docker_build.outputs.digest }}

strategy:

  matrix:

    node-version: [19.x]
‌
steps:
name: Checkout repository
  uses: actions/checkout@v3
‌
name: Set up Node.js
  uses: actions/setup-node@v3

  with:

    node-version: ${{ matrix.node-version }}
‌
name: Install dependencies
  run: npm install
‌
name: Login to Docker Hub
  uses: docker/login-action@v2

  with:

    username: ${{ secrets.DOCKER\_HUB\_USERNAME }}

    password: ${{ secrets.DOCKER\_HUB\_ACCESS_TOKEN }}
‌
name: Set up Docker Buildx
  uses: docker/setup-buildx-action@v2
‌
name: Build and push
  uses: docker/build-push-action@v4

  with:

    context: .

    [file: ./Dockerfil](file: ./Dockerfi "‌")e

    push: true

    tags: ${{ secrets.DOCKER\_HUB\_USERNAME }}/your-image-name:latest
name: Image digest
  run: echo ${{ steps.build.outputs.digest }}
